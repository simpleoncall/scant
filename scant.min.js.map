{"version":3,"file":"scant.min.js","sources":["./src/scant.js"],"names":["Scant","inherits","parent","child","prototype","Object","create","constructor","value","enumerable","writable","configurable","extend","target","source","a","prop","scant","dom","selector","Node","HTMLElement","this","length","i","Array","forEach","func","find","elements","elm","elms","slice","call","querySelectorAll","concat","bind","serialize","results","undefined","nodeName","type","name","checked","isArray","push","options","selected","dataset","$","document","util","fn","defaultAjaxOptions","url","method","headers","data","dataType","beforeSend","responseType","ajax","callback","req","XMLHttpRequest","open","key","setRequestHeader","onload","status","onerror","send","on","eventName","handler","body","querySelector","addEventListener","event","matches","ready","window"],"mappings":"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","sourcesContent":["var Scant = (function(){\n    var inherits = function(parent, child){\n        child.prototype = Object.create(parent.prototype, {\n            constructor: {\n                value: child,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n    };\n\n    var extend = function(target, source) {\n        var a = Object.create(target);\n        for(var prop in source){\n            a[prop] = source[prop];\n        }\n        return a;\n    };\n\n    var scant = function(dom, selector){\n        if(dom instanceof Node || dom instanceof HTMLElement){\n            dom = [dom];\n        }\n        this.selector = selector || '';\n        this.length = dom ? dom.length : 0;\n        for(var i = 0; i < this.length; ++i){\n            this[i] = dom[i];\n        }\n    };\n    inherits(Array, scant);\n\n    if(!scant.prototype.forEach){\n        scant.prototype.forEach = function(func){\n            for(var i = 0; i < this.length; ++i){\n                func(this[i]);\n            }\n        };\n    }\n\n    scant.prototype.find = function(selector){\n        var elements = [];\n        this.forEach(function(elm){\n            var elms = this.slice.call(elm.querySelectorAll(selector));\n            elements = elements.concat(elms);\n        }.bind(this));\n        return new scant(elements);\n    };\n\n    scant.prototype.serialize = function(elm){\n        var results = {};\n        if(elm === undefined){\n            this.forEach(function(elm){\n                results = extend(results, this.serialize(elm));\n            }.bind(this));\n        } else if(elm.nodeName === 'FORM'){\n            this.forEach.call(elm.elements, function(elm){\n                if(elm.nodeName === 'INPUT'){\n                    switch(elm.type){\n                    case 'text':\n                    case 'hidden':\n                    case 'button':\n                    case 'reset':\n                    case 'submit':\n                    case 'password':\n                        results[elm.name] = elm.value;\n                        break;\n                    case 'checkbox':\n                    case 'radio':\n                        if(elm.checked){\n                            if(Array.isArray(results[elm.name])){\n                                results[elm.name].push(elm.value);\n                            } else if(elm.name in results){\n                                results[elm.name] = [results[elm.name], elm.value];\n                            } else {\n                                results[elm.name] = elm.value;\n                            }\n                        }\n                        break;\n                    }\n                } else if(elm.nodeName === 'TEXTAREA'){\n                    results[elm.name] = elm.value;\n                } else if(elm.nodeName === 'BUTTON'){\n                    results[elm.name] = elm.value;\n                } else if(elm.nodeName === 'SELECT'){\n                    switch(elm.type){\n                    case 'select-one':\n                        results[elm.name] = elm.value;\n                        break;\n                    case 'select-multiple':\n                        for(var i = 0; i < elm.options.length; ++i){\n                            if(elm.options[i].selected){\n                                if(Array.isArray(results[elm.name])){\n                                    results[elm.name].push(elm.options[i].value);\n                                } else if(elm.name in results){\n                                    results[elm.name] = [results[elm.name], elm.options[i].value];\n                                } else {\n                                    results[elm.name] = elm.options[i].value;\n                                }\n                            }\n                        }\n                        break;\n                    }\n                }\n            }.bind(this));\n        } else {\n            results = extend(results, elm.dataset);\n        }\n\n        return results;\n    };\n\n    var $ = function(selector){\n        if(typeof selector === 'string'){\n            var elements = document.querySelectorAll(selector);\n            return new scant(elements, selector);\n        }\n        return new scant(selector);\n    };\n\n    $.util = {};\n    $.util.extend = extend;\n    $.util.inherits = inherits;\n    $.fn = scant.prototype;\n\n    var defaultAjaxOptions = {\n        url: null,\n        method: 'GET',\n        headers: {},\n        data: null,\n        dataType: 'application/x-www-form-urlencoded; charset=UTF-8',\n        beforeSend: null,\n        responseType: '',\n    };\n    $.ajax = function(options, callback){\n        options = extend(defaultAjaxOptions, options);\n        callback = typeof callback === 'function' ? callback : function(){};\n        var req = new XMLHttpRequest();\n        req.responseType = options.responseType;\n        req.open(options.method, options.url, true);\n        for(var key in options.headers){\n            req.setRequestHeader(key, options.headers[key]);\n        }\n        req.onload = function(){\n            if(req.status >= 200 && req.status < 400){\n                callback(null, req);\n            } else {\n                callback(true, req);\n            }\n        };\n        req.onerror = function(){\n            callback(true, req);\n        };\n        if(typeof options.beforeSend === 'function'){\n            options.beforeSend(req);\n        }\n        if(options.data){\n            req.setRequestHeader('Content-Type', options.dataType);\n        }\n        req.send(options.data);\n\n        return req;\n    };\n\n    $.on = function(eventName, selector, handler){\n        if(typeof selector === 'function'){\n            handler = selector;\n            selector = null;\n        }\n        var body = document.querySelector('body');\n        body.addEventListener(eventName, function(event){\n            if(selector === null || event.target.matches(selector)){\n                return handler(event);\n            }\n        });\n    };\n\n    $.ready = function(handler){\n        document.addEventListener('DOMContentLoaded', handler);\n    };\n\n    return $;\n})();\n\nwindow.Scant = Scant;\nwindow.$ === undefined && (window.$ = window.Scant);\n"]}